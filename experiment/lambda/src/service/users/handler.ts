// Base imports
import { SwaggenHandler, SwaggenRequest, SwaggenResponse } from "./swaggen";

// Schema imports
import { User } from "../schema/user";

// Proxy import
import { UsersProxy } from "./proxy";

// Stub import
import { UsersStub } from "./stub";

// Type imports from proxy
import { CreateUsersResponse, ReadUsersQueryParams, ReadUsersResponse } from "./proxy";

// Auto-generated by Handler Generator
// Handler class for Users

export class UsersHandler extends SwaggenHandler {

	private proxy: UsersProxy = new UsersStub();

  public async readUsers(req: Request): Promise<SwaggenResponse> {
    // Proxy method signature: readUsers(request: ReadUsersQueryParams): Promise<ReadUsersResponse>;
    const result = await this.proxy.readUsers(req.query);
    // TODO: Implement GET logic
    return new SwaggenResponse(200, { "Content-Type": "application/json" }, { message: "GET method called" });
  }

  public async createUsers(req: Request): Promise<SwaggenResponse> {
    // Proxy method signature: createUsers(request: void): Promise<CreateUsersResponse>;
    const result = await this.proxy.createUsers(req.body);
    // TODO: Implement POST logic
    // If request body type is needed: (req.body as User)
    return new SwaggenResponse(200, { "Content-Type": "application/json" }, { message: "POST method called" });
  }

  protected getUnauthorized(): SwaggenResponse {
    return super.unauthorized("Unauthorized - Missing or invalid authentication token");
  }

  protected getForbidden(): SwaggenResponse {
    return super.forbidden("Forbidden - You do not have permission to access this resource");
  }

  protected getInternalServerError(): SwaggenResponse {
    return super.internalServerError("Internal Server Error");
  }

  protected postBadRequest(): SwaggenResponse {
    return super.badRequest("Bad Request - Invalid user data");
  }

  protected postUnauthorized(): SwaggenResponse {
    return super.unauthorized("Unauthorized - Missing or invalid authentication token");
  }

  protected postForbidden(): SwaggenResponse {
    return super.forbidden("Forbidden - You do not have permission to access this resource");
  }

  protected postInternalServerError(): SwaggenResponse {
    return super.internalServerError("Internal Server Error");
  }

}
