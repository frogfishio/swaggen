// Base imports
import { SwaggenHandler, SwaggenRequest, SwaggenResponse } from "./swaggen";

// Proxy import
import { UsersExtendedProxy } from "./proxy";

// Stub import
import { UsersExtendedStub } from "./stub";

// Type imports from proxy
import { CreateUsersExtendedResponse } from "./proxy";

// Auto-generated by Handler Generator
// Handler class for UsersExtended

export class UsersExtendedHandler extends SwaggenHandler {

	private proxy: UsersExtendedProxy = new UsersExtendedStub();

  public async createUsersExtended(req: SwaggenRequest): Promise<SwaggenResponse> {
    // Proxy method signature: createUsersExtended(request: void): Promise<CreateUsersExtendedResponse>;
    const result = await this.proxy.createUsersExtended();
    // TODO: Implement POST logic
    return new SwaggenResponse(200, { "Content-Type": "application/json" }, { message: "POST method called" });
  }

  protected postBadRequest(): SwaggenResponse {
    return super.badRequest("Bad Request - Invalid input");
  }

  protected postUnauthorized(): SwaggenResponse {
    return super.unauthorized("Unauthorized - Missing or invalid authentication token");
  }

  protected postForbidden(): SwaggenResponse {
    return super.forbidden("Forbidden - You do not have permission to access this resource");
  }

  protected postInternalServerError(): SwaggenResponse {
    return super.internalServerError("Internal Server Error");
  }

}
